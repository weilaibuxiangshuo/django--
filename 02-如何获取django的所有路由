from django.utils.module_loading import import_string
from django.urls import URLResolver,URLPattern,RoutePattern,RegexPattern
from collections.abc import Iterable
from django.conf import settings



class NewMethodMiddle(MiddlewareMixin):
  def urlGet(self):
    pp=import_string(settings.ROOT_URLCONF)
    ccuu = pp.urlpatterns
    self.get_url(ccuu)
    
    #第一种方式比较高效：
    @classmethod
    def get_url(cls,data,parentPath=""):
        for m in data:
            if isinstance(m,URLPattern):
                if str(m.pattern)==".*":
                    continue
                if not parentPath:
                    if isinstance(m.pattern,RegexPattern):
                        reg1 = re.compile("[\^](.*)[\$]")
                        result = reg1.findall(str(m.pattern))
                        cls.urlList.add(result[0])
                    else:
                        result = str(m.pattern)
                        cls.urlList.add(result)
                else:
                    if isinstance(m.pattern,RegexPattern):
                        reg1 = re.compile("[\^](.*)[\$]")
                        result = reg1.findall(str(m.pattern))
                        newRes = str(parentPath)+result[0]
                        cls.urlList.add(newRes)
                    else:
                        newRes = str(parentPath)+str(m.pattern)
                        cls.urlList.add(newRes)
            elif isinstance(m,URLResolver):
                if hasattr(m,"url_patterns"):
                    cls.get_url(m.url_patterns,m.pattern)
        return True

